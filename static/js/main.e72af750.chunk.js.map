{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Loader.js","api/getImages.js","components/App.js","index.js"],"names":["SearchBarHeader","styled","header","SearchForm","form","SearchButton","button","SearchButtonLabel","span","SearchFormInput","input","Searchbar","state","searchQuery","onChange","e","target","name","value","setState","onSubmit","preventDefault","props","onFormSubmit","this","type","autoComplete","autoFocus","placeholder","Component","propType","PropTypes","func","isRequired","ImageGalleryItm","li","Image","img","ImageGalleryItem","images","map","id","webformatURL","key","src","alt","ImageGrid","ul","ImageGallery","arrayOf","Loader","color","height","width","page","axios","get","then","response","data","hits","Application","div","App","isLoading","imgURL","error","onSearchFormSubmit","query","onLoadMore","onModalOpened","onModalClose","fetchImages","getImagesAPI","prevState","catch","finally","prevProps","snapshot","message","length","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e72af750.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n  0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst SearchForm = styled.form`\ndisplay: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder{\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\n\nexport default class Searchbar extends Component {\n\n  state = {\n    searchQuery: ''\n  };\n\n  onChange = e => {\n    const {name, value} = e.target;\n\n    this.setState({[name]: value})\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    this.props.onFormSubmit(this.state.searchQuery);\n    this.setState({searchQuery: ''});\n  };\n\n  render() {\n    return (\n      <SearchBarHeader>\n        <SearchForm onSubmit={this.onSubmit}>\n          <SearchButton type=\"submit\">\n            <SearchButtonLabel>Search</SearchButtonLabel>\n          </SearchButton>\n\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name =\"searchQuery\"\n            value={this.state.searchQuery}\n            onChange = {this.onChange}\n          />\n        </SearchForm>\n      </SearchBarHeader>\n    )\n  }\n}\n\nSearchbar.propType = {\n  onFormSubmit: PropTypes.func.isRequired\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst ImageGalleryItm = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport default function ImageGalleryItem({images})\n{\n  return (\n      <>\n        {images.map(({ id, webformatURL }) => (\n          <ImageGalleryItm key={id}>\n            <Image src={webformatURL} alt=\"\"/>\n          </ImageGalleryItm>\n        ))}\n      </>\n  )\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n\nconst ImageGrid = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default function ImageGallery({images})\n{\n  return (\n    <ImageGrid>\n      <ImageGalleryItem images={images} />\n    </ImageGrid>\n  )\n}\n\nImageGallery.propType = PropTypes.arrayOf(\n);","//Компонент спинера, отображется пока идет загрузка изобаржений. Используй любой готовый компонент, например react-loader-spinner или любой другой.\n\nimport React from \"react\";\nimport LoadIndicator from \"react-loader-spinner\";\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Loader() {\n  return(\n    <LoadIndicator\n      type=\"Bars\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n    />\n  )\n}","import axios from \"axios\";\n// API_KEY = 14121213-0294698cbddd3de5cddc95af0\n// URL = https://pixabay.com/api/?q={SearchQuery}&page={page}&key={API_KEY}&image_type=photo&orientation=horizontal&per_page=12\n\nconst fetchImages = (searchQuery, page = 0) => {\n    return axios\n        .get(\n            `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=14121213-0294698cbddd3de5cddc95af0&image_type=photo&orientation=horizontal&per_page=12`,\n        )\n        .then(response => response.data.hits);\n};\n\nexport default {\n    fetchImages,\n};","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Searchbar from \"./Searchbar\";\r\nimport ImageGallery from \"./ImageGallery\";\r\nimport Loader from \"./Loader\";\r\n\r\nimport getImagesAPI from \"../api/getImages\"\r\n\r\nconst Application = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        searchQuery: '',\r\n        images: [],\r\n        page: 0,\r\n        isLoading: false,\r\n        imgURL: null,\r\n        error: null\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // window.scrollTo({\r\n        // top: document.documentElement.scrollHeight,\r\n        // behavior: 'smooth',\r\n        // });\r\n\r\n        const prevSearchQuery = prevState.searchQuery;\r\n        const currentSearchQuery = this.state.searchQuery;\r\n\r\n        if (prevSearchQuery !== currentSearchQuery) {\r\n            this.fetchImages();\r\n        }\r\n    }\r\n\r\n    onSearchFormSubmit = (query) => {\r\n        this.setState({\r\n            images: [],\r\n            searchQuery: query,\r\n            page: 0,\r\n        });\r\n    };\r\n\r\n    onLoadMore = () => {\r\n    };\r\n\r\n    onModalOpened = () => {\r\n    };\r\n\r\n    onModalClose = () => {\r\n    };\r\n\r\n    fetchImages = () => {\r\n        const {searchQuery, page} = this.state;\r\n\r\n        this.setState({isLoading: true});\r\n\r\n        getImagesAPI\r\n            .fetchImages(searchQuery, page)\r\n            .then(images =>\r\n                this.setState(prevState => ({\r\n                    images: [...prevState.images, ...images],\r\n                    page: prevState.page + 1\r\n                })))\r\n            .catch(error => this.setState({error}))\r\n            .finally(() => this.setState({isLoading: false}));\r\n    };\r\n\r\n    render() {\r\n\r\n        const {images, isLoading, error} = this.state;\r\n\r\n        return (\r\n            <Application>\r\n                <Searchbar onFormSubmit={this.onSearchFormSubmit}/>\r\n\r\n                {error && (<p>{`Whoops, something went wrong: ${error.message}`}</p>)}\r\n\r\n                {images.length > 0 && <ImageGallery images={images}/>}\r\n                {isLoading && <Loader/>}\r\n                {images.length > 0 && !isLoading && (\r\n                    <button type=\"button\" onClick={this.fetchImages}>\r\n                        Load more\r\n                    </button>\r\n                )}\r\n            </Application>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}